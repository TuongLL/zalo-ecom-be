// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://postgres.brilptnqciadhcotfywv:zalo_freelance_ecom1@aws-0-ap-southeast-1.pooler.supabase.com:5432/postgres"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  phone     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id                String    @id @default(cuid())
  name              String
  description       String
  short_description String
  media             Json[]
  slug              String    @unique 
  is_stock          Boolean
  is_best_seller    Boolean
  price             Float
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  Comment           Comment[]
}

model Category {
  id          String   @id @default(cuid())
  name        String
  description String
  slug        String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ProductCategory {
  id         String   @id @default(cuid())
  productId  String
  categoryId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model ProductVariant {
  id        String   @id @default(cuid())
  productId String
  name      String
  image     String
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Cart      Cart?    @relation(fields: [cartId], references: [id])
  cartId    String?
}

model Cart {
  id       String           @id @default(cuid())
  email    String
  phone    String
  address  String
  products ProductVariant[]
}

model Comment {
  id        String   @id @default(cuid())
  product   Product  @relation(fields: [productId], references: [id])
  content   String
  email     String
  phone     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  productId String
}
